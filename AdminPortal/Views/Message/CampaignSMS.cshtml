@model AdminPortal.Models.Campaign
@{
    ViewBag.Title = "CampaignSMS";
}
@section style
{
    @Styles.Render("~/Contents/stepform/style")
}

<div class="wizard-main">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 login-sec">
                <div class="login-sec-bg">
                    @{
                        if (ViewBag.result != null)
                        {
                            <div class="alert alert-dismissable alert-@ViewBag.status" style="background-color: @ViewBag.status">
                                <p style="color: white">@ViewBag.result</p>
                            </div>
                            <br />
                        }
                    }
                    <form id="form" method="post" action="/Message/CampaignSMS" enctype="multipart/form-data">
                        <h3>Campaign Details</h3>
                        <fieldset class="form-input">
                            <h4>Add Campaign</h4>

                            @Html.LabelFor(model => model.camp_name):
                            @Html.EditorFor(model => model.camp_name, new { htmlAttributes = new { @class = "form-control", placeholder = "Campaign Name" } })
                            @Html.ValidationMessageFor(model => model.camp_name, "", new { @class = "text-danger" })

                            @Html.LabelFor(model => model.sender):
                            @Html.DropDownListFor(model => model.sender, new SelectList(AdminPortal.Codebase.UserProcessing.SelectedMaskings(null), "id", "masking"), new
                       {
                           @class = "form-control mb-1 masking",
                           id = "Masking"
                       })
                            @Html.LabelFor(model => model.receiver):
                            @Html.TextAreaFor(model => model.receiver, new { @class = "form-control", cols = "10", rows = "5", id = "receiver" })
                            <br />
                            <input type="file" class="form-control mt-2" name="contactsFile" id="contactsFile" />
                            <span id="" style="color: red !important;font-size: 10px;">*Attach .csv/.xlsx file only</span><br />
                            <button type="button" class="btn bg-gradient-dark" id="btnGroup">0 Contact / Group</button>
                            <br />
                            <div class="row">
                                <label>Upload Multiple Option:</label>
                                <div class="col-md-2 p-0 m-0">
                                    <input type="button" id="btnContact" class="btn bg-gradient-dark" value="Add Contact" data-toggle="modal" data-target="#contactModal" />
                                </div>
                                <div class="col-md-2 p-0 m-0">
                                    <input type="button" id="btnGroup" class="btn bg-gradient-dark" value="Add Group" data-toggle="modal" data-target="#groupModal" />
                                </div>
                                <div class="col-md-2 p-0 m-0">
                                    <button type="reset" class="btn bg-gradient-dark">Reset</button>
                                </div>
                            </div>
                        </fieldset>

                        <h3>Message Content</h3>
                        <fieldset class="form-input">
                            <h4>Add Message</h4>
                            <button type="button" class="btn bg-gradient-dark" id="">Urdu</button>
                            @Html.TextAreaFor(model => model.msgdata, new { @class = "form-control mb-2", placeholder = "Enter Message", rows = "5", cols = "68" })
                            @Html.ValidationMessageFor(model => model.msgdata, "", new { @class = "text-danger" })
                            <button type="button" class="btn bg-gradient-dark" id="btnMessage">0 characters 0 SMS Message</button>
                        </fieldset>

                        <h3>Schedule Time Period</h3>
                        <fieldset class="form-input">
                            <h4>When do you want to send your campaign</h4>
                            <input class="form-check-input" type="radio" name="sendMessage" id="sendNow" required>
                            <label class="custom-control-label" for="sendMessage">Send It Now</label>

                            <input class="form-check-input" type="radio" name="sendMessage" id="scheduelCamp" required>
                            <label class="custom-control-label" for="sendMessage">Schedule For Campaign</label>
                            <div class="container">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div id="scheduleMyCamp" class="collapse">
                                            <label class="custom-control-label" for="scheduleMessage">Schedule Delivery Datetime: </label>
                                            <input type="datetime-local" class="form-control" name="camp_time" id="camp_time" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <input type="submit" class="btn bg-gradient-dark" value="Send" id="btnSubmit" />
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Contact Modal -->
<div class="modal" id="contactModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h5 class="modal-title">Add Contact</h5>
            </div>
            <!-- Modal body -->
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-striped" id="innerTable">
                        <thead>
                            <tr>
                                <td></td>
                                <td>Full Name</td>
                                <td>Mobile</td>
                                <td>Email</td>
                                <td>Option 1</td>
                                <td>Option 2</td>
                                <td>Option 3</td>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" id="btnAdd" class="btn bg-gradient-dark">Add</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Group Modal -->
@{
    Html.RenderAction("_AddGroup", "Message");
}

@section scripts
    {
    @Scripts.Render("~/bundles/stepform/js")
    <script src="~/Scripts/ProjectScript/CrudScript.js"></script>
    <script src="~/Scripts/ProjectScript/CommonMethods.js"></script>
    <script>
        $(document).ready(function () {
            $('.masking').select2();
            $('.groupname').select2();

            $(".alert").fadeIn();
            $('.alert').fadeOut(4000);
            $('#innerTable').DataTable();

            $('#sendNow').change(function () {
                $('#scheduleMyCamp').hide();
                $('#camp_time').val('');
            });

            $('#scheduelCamp').change(function () {
                $('#scheduleMyCamp').show();
            });

            $('#msgdata').keyup(function (e) {
                var msgVal = $('#msgdata').val().length;
                $('#btnMessage').text(msgVal + ' characters / ' + Math.ceil(msgVal / 160) + ' SMS');
            });
        });
        var form = $('#form');

        form.steps({
            headerTag: "h3",
            bodyTag: "fieldset",
            transitionEffect: "slideLeft",
            onStepChanging: function (event, currentIndex, newIndex) {
                // Allways allow previous action even if the current form is not valid!
                if (currentIndex > newIndex) {
                    return true;
                }
                // Needed in some cases if the user went back (clean up)
                if (currentIndex < newIndex) {
                    // To remove error styles
                    form.find(".body:eq(" + newIndex + ") label.error").remove();
                    form.find(".body:eq(" + newIndex + ") .error").removeClass("error");
                }

                return form.valid();
            },
            onStepChanged: function (event, currentIndex, priorIndex) {

            },
            onFinishing: function (event, currentIndex) {
                return form.valid();
            },
            onFinished: function (event, currentIndex) {

            }
        })
            .validate({
                errorPlacement: function errorPlacement(error, element) { element.before(error); },
                rules: {
                    camp_name: {
                        required: true
                    },
                    msgdata: {
                        required: true
                    }
                }
            });
        var form = $("#form");
        form.submit(function (e) {
            var filename = $('#contactsFile').val();
            var subStr = filename.substr(filename.lastIndexOf('.') + 1);

            if (subStr == "csv" || subStr == "xls" || subStr == "xlsx") { }
            else {
                ShowDivError("please upload correct file format");
            }

            if (!form.valid()) {
                ShowDivError("please fill out the form");
                e.preventDefault();
            }
            else {
                ShowDivSuccess1("Please wait...");
            }
        });
        $('#btnContact').click(function () {
            var tableView = $('#innerTable').DataTable();
            tableView.destroy();
            CrudScript.makeAjaxRequest('POST', '/Contacts/GetUserContacts').then(function (data) {
                $('#innerTable').DataTable({
                    data: data.message,
                    columns: [
                        {
                            'mData': null,
                            "mRender": function (data, type, full) {
                                return '';
                            }
                        },
                        { 'data': 'fullname' },
                        { 'data': 'numbers' },
                        { 'data': 'emails' },
                        { 'data': 'option1' },
                        { 'data': 'option2' },
                        { 'data': 'option3' }
                    ],
                    columnDefs: [{
                        className: 'select-checkbox',
                        targets: [0],
                        ordering: false
                    }],
                    select: {
                        style: 'multi',
                        selector: 'td:first-child'
                    },
                    ordering: false
                });
            });
        });
        $('#btnAdd').click(function () {
            var tableInner = $('#innerTable').DataTable();
            var ss = tableInner.rows({ selected: true }).data();
            var receiver = "";
            $.each(ss, function (key, val) {
                receiver += val.numbers + ",";
            });
            var val = $('#receiver').val();
            $('#receiver').val(val + "" + receiver);
            $('#contactModal').modal('hide');
        });
        $('#btnAddGroup').click(function () {
            CrudScript.makeAjaxRequest('POST', '/Message/_ViewContacts', { id: $('#groupname').val() }).then(function (data) {
                if (data.status == true) {
                    var contacts = "";
                    var preVal = $('#receiver').val();
                    $.each(data.message, function (key, val) {
                        contacts += val.numbers + ",";
                    });
                    $('#receiver').val(preVal + "," + contacts);
                    $('#groupModal').modal('hide');
                }
            });
        });
    </script>

}